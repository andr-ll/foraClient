{"version":3,"sources":["state/actions/user.js","Components/LoginPage/Form.jsx","Components/LoginPage/LoginPage.jsx","socket.js","Components/Room/Components/Users.jsx","Components/Room/Components/Messages.jsx","Components/Room/Components/MessageInput.jsx","Components/Room/Components/AllRooms.jsx","Components/Room/Components/ExitChat.jsx","Components/Room/Components/Hamburger.jsx","Components/Room/Room.jsx","App.jsx","state/reducers/user.js","state/reducers/index.js","index.js","state/store/store.js"],"names":["LoginUserAction","CreateUserAction","UserLogoutAction","UserNewRoomAction","Form","dispatch","useDispatch","useState","userName","setUserName","action","className","onSubmit","evt","preventDefault","placeholder","type","value","onChange","target","onClick","payload","loginUser","to","trim","length","LoginPage","socket","io","withCredentials","extraHeaders","Users","users","setUsers","userData","useSelector","state","userState","useEffect","on","roomData","room","map","user","id","name","Messages","messages","setMessages","message","animateScroll","scrollToBottom","containerId","smooth","duration","item","i","style","display","text","time","MessageInput","setMessage","emit","AllRooms","onRoomClick","rooms","setRooms","roomsData","onRoomChange","userChangeRoom","ExitChat","onChatLeave","undefined","window","onunload","Hamburger","isActive","setActive","Room","error","setError","activeHamb","setActiveHamb","data","Fragment","App","path","exact","initioalState","rootReducer","combineReducers","Object","assign","store","createStore","appStore","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.0508ffe2.chunk.js","sourcesContent":["export const LoginUserAction = \"LoginUser\";\nexport const CreateUserAction = \"CreateUser\";\nexport const UserLogoutAction = \"UserLogout\";\nexport const UserNewRoomAction = \"ChangeRoom\";\n\nexport const loginUser = (userName) => {\n    return {\n        type: LoginUserAction,\n        payload: userName\n    }\n}\n\nexport const createUser = (userData) => {\n    return {\n        type: CreateUserAction,\n        payload: userData\n    }\n}\n\nexport const userChangeRoom = (user) => {\n    return {\n        type: UserNewRoomAction,\n        payload: user\n    }\n}\n\nexport const userLogout = () => {\n    return {\n        type: UserLogoutAction,\n        payload: undefined\n    }\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from '../../state/actions/user';\n\n// Form which is used for getting to the chat.\n\nconst Form = () => {\n\n    const dispatch = useDispatch();\n    const [userName, setUserName] = useState('')\n\n    const onLogin = () => {\n        dispatch(loginUser(userName))\n    }\n\n    return (\n        <form action=\"submit\" className=\"flex\" onSubmit={evt => evt.preventDefault()}>\n            <input placeholder=\"Create an user name...\" type=\"text\" value={userName} onChange={evt => setUserName(evt.target.value)} />\n            <Link onClick={onLogin} to=\"/foraClient/room\" className={`${userName.trim() === '' || userName.length > 20 ? \"disabled\" : \"\"}`}>\n                Login\n                <i className=\"fas fa-comments\"></i>\n            </Link>\n            {userName.length > 20 && <span><i className=\"fas fa-exclamation-triangle\"></i>User name should be less than 20 symbols!</span>}\n        </form>\n    )\n}\n\nexport default Form;","import React from 'react';\n\nimport Form from './Form'\nimport './LoginPage.scss'\n\n// First component of Login procedure.\n\nexport const LoginPage = () => {\n    \n    return (\n        <div className=\"login-page flex\">\n            <div className=\"login-box\">\n                <h3>Hello! Please create an user name for joining the chat!</h3>\n                <Form />\n            </div>\n        </div>\n    )\n}","import { io } from 'socket.io-client';\n\nconst PORT = \"https://chatserverandrll.herokuapp.com/\"; //\"http://localhost:3001\";\n\nexport const socket = io(PORT, {\n    withCredentials: true,\n    extraHeaders: {\n        \"my-custom-header\": \"abcd\"\n    }\n});","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { socket } from '../../../socket';\n\n// This component gets data about Users from server and shows how many \n// users are currently in the specific room\n\nexport const Users = () => {\n\n    const [users, setUsers] = useState([]);\n    const userData = useSelector(\n        state => state.userState.userData\n    )\n\n    useEffect(() => {\n        socket.on(\"roomData\", roomData => {\n            setUsers(roomData.users);\n        });\n\n        socket.on('newRoom', () => { setUsers([]) })\n\n        return () => { setUsers([]) }\n    }, [])\n\n    return (\n        <div className=\"all-users flex\">\n            <h4 className=\"desktop-only\">Users in {userData.room}:</h4>\n            <h4 className=\"mobile-only\">Users:</h4>\n            <div className=\"users-wrapper flex\">\n                {users.map((user, id) => <p className={`${userData.name === user.name ? \"me\" : \"\"}`} key={id}>{user.name}</p>)}\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { animateScroll } from \"react-scroll\";\nimport { socket } from \"../../../socket\";\n\n// This component renders all messages. Once user changed room - \n// all messages will be unmouned and user gets fresh messages window\n// for new room\n\nexport const Messages = () => {\n\n    const [messages, setMessages] = useState([]);\n    const userName = useSelector(\n        state => state.userState.userName\n    )\n\n    useEffect(() => {\n        socket.on('adminMessage', message => {\n            setMessages(messages => [...messages, message]);\n        });\n\n        socket.on('newRoom', () => {\n            setMessages([]);\n        });\n\n        return () => { setMessages([]) }\n    }, []);\n\n    const scrollToBottom = () => {\n        animateScroll.scrollToBottom({\n            containerId: \"messages\",\n            smooth: true,\n            duration: 180\n        });\n    }\n\n    useEffect(() => {\n        scrollToBottom()\n        return () => { }\n    }, [messages])\n\n\n    return (\n        <div className=\"messages-window flex\" id=\"messages\">\n            {\n                messages.map((item, i) =>\n                    <div key={i} className={`${item.user === userName ? \"my-message message\" : \"\"} ${item.user === \"admin\" ? \"admin\" : \"chat-message message\"}`}>\n                        <span style={{ display: item.user === \"admin\" && \"none\" }} >{item.user === userName ? 'Me' : item.user}</span>\n                        <p> {item.text}</p> <span className=\"time\">{item.time}</span>\n                    </div>\n                )\n            }\n        </div>\n    )\n}","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { socket } from \"../../../socket\"\n\n// This component sends message to the server.\n\nexport const MessageInput = () => {\n\n    const [message, setMessage] = useState('');\n    const userData = useSelector(\n        state => state.userState.userData\n    )\n\n    const onSendMessage = () => {\n        if (message !== '') {\n            socket.emit('sendMessage', userData, message, () => {\n                setMessage('')\n            })}\n    }\n\n    return (\n        <form action=\"submit\" className=\"flex\" onSubmit={evt => evt.preventDefault()}>\n            <input placeholder=\"Enter your message...\" type=\"textarea\" value={message} onChange={evt => setMessage(evt.target.value)} />\n            <button onClick={onSendMessage}>Send</button>\n        </form>\n    )\n}","import { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { socket } from \"../../../socket\"\nimport { userChangeRoom } from \"../../../state/actions/user\";\n\n// This component renders all rooms that user can join.\n// Also it changes current room, when user moved to another chat room.\n\nexport const AllRooms = ({onRoomClick}) => {\n\n    const [rooms, setRooms] = useState([]);\n    const dispatch = useDispatch();\n    const userData = useSelector(\n        state => state.userState.userData\n    )\n\n    useEffect(() => {\n        socket.on('allRooms', roomsData => {\n            setRooms(roomsData)\n        })\n        return () => { setRooms([]) }\n    }, [])\n\n    const onRoomChange = (room) => {\n        socket.emit('changeRoom', userData.id, room, (user) => {\n            dispatch(userChangeRoom(user));\n            onRoomClick();\n        })\n    }\n\n    return (\n        <div className=\"rooms flex\">\n            <h4>Rooms:</h4>\n            { rooms.map((item, id) => <a onClick={() => onRoomChange(item.name)} className={`${userData.room === item.name ? \"my-room\" : \"\"}`} key={id}>{item.name}</a>)}\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { socket } from '../../../socket';\nimport { userLogout } from \"../../../state/actions/user\";\n\n// This component checks for leaving the Chat.\n// Also, if the page was refreshed - user will be automatically \n// logged out.\n\nexport const ExitChat = () => {\n\n    const dispatch = useDispatch();\n    const userData = useSelector(\n        state => state.userState.userData\n    )\n\n    const onChatLeave = () => {\n        socket.emit('leaveChat', userData.id, () => {\n            dispatch(userLogout())\n        })\n    }\n\n    window.onunload = () => {\n        onChatLeave()\n    };\n\n    return (\n        <div className=\"exit flex\">\n            <Link className=\"desktop-only\" onClick={onChatLeave} to=\"/foraClient\"><i className=\"far fa-times-circle\"></i>leave the chat</Link>\n            <Link className=\"mobile-only\" onClick={onChatLeave} to=\"/foraClient\"><i className=\"far fa-times-circle\"></i></Link>\n        </div>\n    )\n}","export const Hamburger = ({isActive, setActive}) => {\n    return (\n        <button className={`hamburger hamburger--squeeze mobile-only ${isActive ? \"is-active\" : \"\"}`} type=\"button\" onClick={setActive}>\n            <span className=\"hamburger-box\">\n                <span className=\"hamburger-inner\"></span>\n            </span>\n        </button>\n    )\n}","import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Link } from \"react-router-dom\";\nimport { socket } from \"../../socket\";\nimport { createUser } from \"../../state/actions/user\";\nimport './Room.scss'\nimport { Users } from \"./Components/Users\";\nimport { Messages } from \"./Components/Messages\";\nimport { MessageInput } from \"./Components/MessageInput\";\nimport { AllRooms } from \"./Components/AllRooms\";\nimport { ExitChat } from \"./Components/ExitChat\";\nimport { Hamburger } from \"./Components/Hamburger\";\n\n// Main component of a Chat room. It renders automatically when uder joins\n// chat or changing the room\n\nexport const Room = () => {\n\n    const dispatch = useDispatch();\n    const userName = useSelector(\n        state => state.userState.userName\n    )\n    const [error, setError] = useState('');\n    const [activeHamb, setActiveHamb] = useState(false)\n\n    useEffect(() => {\n        socket.emit('login', userName, (data) => {\n            if (data.error !== '') {\n                setError(data.error);\n            } else {\n                dispatch(createUser(data.user))\n            }\n        })\n        return () => { setError('') }\n    }, [])\n\n    const onHamburgerClick = () => {\n        activeHamb ? setActiveHamb(false) : setActiveHamb(true)\n    }\n\n    const onRoomClick = () => {\n        setActiveHamb(false)\n    }\n\n    return (\n        <React.Fragment>\n            {\n                error !== '' ?\n                    <div className=\"error-window\">\n                        <p>{error}</p>\n                        <Link to=\"/foraClient\">Go Back</Link>\n                    </div>\n                    :\n                    <div className=\"room flex\">\n                        <div className=\"sidebar flex\">\n                            <ExitChat />\n                            <div className=\"container desktop-only flex\">\n                                <AllRooms onRoomClick={onRoomClick} />\n                                <Users />\n                            </div>\n                            <div className={`${activeHamb ? \"active\" : \"\"} container mobile-only flex`}>\n                                <AllRooms onRoomClick={onRoomClick} />\n                                <Users />\n                            </div>\n                            <Hamburger isActive={activeHamb} setActive={onHamburgerClick} />\n                        </div>\n                        <div className=\"messages flex\">\n                            <Messages />\n                            <MessageInput />\n                        </div>\n                    </div>\n            }\n        </React.Fragment>\n    )\n}","import React from 'react';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { LoginPage } from './Components/LoginPage/LoginPage';\nimport { Room } from './Components/Room/Room';\nimport './App.scss'\n\n// A simple structure for this application. When User just gets to this\n// site - he has to create new user name and then join the Main Room.\n\n export default function App() {\n    return (\n        <Router>\n            <Route path='/foraClient/room'>\n                <Room />\n            </Route>\n            <Route path='/foraClient' exact>\n                <LoginPage />\n            </Route>\n        </Router>\n    )\n}","import { LoginUserAction, CreateUserAction, UserLogoutAction, UserNewRoomAction } from \"../actions/user\";\nconst initioalState = {\n    userName: '',\n    userData: {},\n}\n\nexport const userReducer = (\n    state = initioalState,\n    action\n) => {\n    switch(action.type) {\n        case LoginUserAction:\n            return Object.assign({}, state, { userName: action.payload } );\n        case CreateUserAction:\n            return Object.assign({}, state, { userData: action.payload });\n        case UserLogoutAction:\n            return Object.assign({}, state, { userData: {}, userName: '' });\n        case UserNewRoomAction:\n            return Object.assign({}, state, { userData: action.payload })\n    }\n    return state;\n}","import { combineReducers } from \"redux\";\nimport { userReducer } from './user'\n\nexport const rootReducer = combineReducers({\n    userState: userReducer\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport appStore from './state/store/store';\n\n// Redux was used for creatin a state of current user for this app.\n\nconst store = appStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.querySelector('#root')\n);","import { createStore } from 'redux';\nimport { rootReducer } from '../reducers/index';\n\n\nconst appStore = () => {\n    const store = createStore(\n        rootReducer,\n        undefined\n    )\n    return store;\n}\n\nexport default appStore;"],"sourceRoot":""}